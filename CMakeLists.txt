CMAKE_MINIMUM_REQUIRED(VERSION 3.0 FATAL_ERROR)
PROJECT(Test VERSION 0.0.1)

SET(wxWidgets_USE_REL_AND_DBG ON)
FIND_PACKAGE(wxWidgets REQUIRED core qa net html xml aui adv stc webview base scintilla REQUIRED)
INCLUDE(${wxWidgets_USE_FILE})


MESSAGE(STATUS "Host system    : ${CMAKE_HOST_SYSTEM_NAME} ${CMAKE_HOST_SYSTEM_PROCESSOR}")
MESSAGE(STATUS "Target system  : ${CMAKE_SYSTEM_NAME} ${TARGET_ARCH}")
MESSAGE(STATUS "Generator      : ${CMAKE_GENERATOR}")
GET_FILENAME_COMPONENT(m_make "${CMAKE_MAKE_PROGRAM}" NAME)
MESSAGE(STATUS "Build command  : ${m_make}")
IF(MSVC)
    IF(CMAKE_VS_PLATFORM_TOOLSET)
        MESSAGE(STATUS "Toolset        : ${CMAKE_VS_PLATFORM_TOOLSET}")
        IF(CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE)
            MESSAGE(STATUS "Toolset host   : ${CMAKE_VS_PLATFORM_TOOLSET_HOST_ARCHITECTURE}")
        ENDIF()
    ENDIF()
    IF(CMAKE_VS_PLATFORM_NAME)
        MESSAGE(STATUS "Platform       : ${CMAKE_VS_PLATFORM_NAME}")
    ENDIF()
    MESSAGE(STATUS "VC installed   : $ENV{VCINSTALLDIR}")
ENDIF()
MESSAGE(STATUS "Install prefix : ${CMAKE_INSTALL_PREFIX}")

MESSAGE(STATUS "")
MESSAGE(STATUS "Versions")
MESSAGE(STATUS "========")
MESSAGE(STATUS "${CMAKE_HOST_SYSTEM_NAME} : ${CMAKE_HOST_SYSTEM_VERSION}")
MESSAGE(STATUS "CMake : ${CMAKE_VERSION}")
MESSAGE(STATUS "MSVC : ${MSVC_VERSION}")
MESSAGE(STATUS "${CMAKE_CXX_COMPILER_ID} : ${CMAKE_CXX_COMPILER_VERSION}")
IF(CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION)
    MESSAGE(STATUS "Win SDK : ${CMAKE_VS_WINDOWS_TARGET_PLATFORM_VERSION}")
ENDIF()
IF(wxWidgets_VERSION_STRING)
    MESSAGE(STATUS "wxWidgets : ${wxWidgets_VERSION_STRING}")
ENDIF()
